name: Build & Push Package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
  repository_dispatch:

jobs:
  linux:
    name: Build & Push Package
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout files
        uses: actions/checkout@v4

      - name: Install Package Dependencies
        run: npm ci

      - name: Set Package Name to Environment Variable
        run: echo "PACKAGE_NAME=$(npm run env | grep "npm_package_name" | awk -F "=" '{print $2}')" >> $GITHUB_ENV

      - name: Set Package Version to Environment Variable
        run: echo "PACKAGE_VERSION=$(npm run env | grep "npm_package_version" | awk -F "=" '{print $2}')" >> $GITHUB_ENV

      - name: Pack Extension
        id: pack_extension
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          dryRun: true
          pat: "stub"

      - name: Set Extension Filename to Environment Variable
        run: echo "EXTENSION_FILENAME=$(basename '${{ steps.pack_extension.outputs.vsixPath }}')" >> $GITHUB_ENV

      - name: Publish Extension to Visual Studio Code Marketplace
        if: github.event_name != 'pull_request'
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}
          registryUrl: https://marketplace.visualstudio.com
          extensionFile: "${{ steps.pack_extension.outputs.vsixPath }}"
          skipDuplicate: true

      - name: Publish Extension to Open VSX Registry
        if: github.event_name != 'pull_request'
        uses: HaaLeo/publish-vscode-extension@v1
        with:
          pat: ${{ secrets.OPEN_VSX_TOKEN }}
          extensionFile: "${{ steps.pack_extension.outputs.vsixPath }}"
          skipDuplicate: true

      - name: Create Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Version ${{ env.PACKAGE_VERSION }}"
          tag_name: "v${{ env.PACKAGE_VERSION }}"
          generate_release_notes: true
          draft: false
          prerelease: false
          make_latest: true
          files: |
            ${{ steps.pack_extension.outputs.vsixPath }}
